name: CI (feature -> PR -> main)

on:
  push:
    branches: ["feature/**"]        # dispara no push de branches feature/...
  pull_request:
    branches: ["main"]              # também roda nos PRs voltados para main

permissions:
  contents: read
  pull-requests: write              # necessário para criar/atualizar PR

jobs:
  # 1) Cria o PR automaticamente (só em eventos de push em feature/**)
  create-pr:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create or update PR to main (if missing)
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const {owner, repo} = context.repo;
            const headBranch = context.ref.replace('refs/heads/', ''); // ex: feature/my-branch

            // Verifica se já existe PR aberto de headBranch -> main
            const existing = await github.rest.pulls.list({
              owner, repo,
              state: 'open',
              head: `${owner}:${headBranch}`,
              base: 'main',
              per_page: 1
            });

            if (existing.data.length > 0) {
              core.info(`PR já existe: #${existing.data[0].number}`);
            } else {
              const title = `feat: ${headBranch}`;
              const body = `Auto-created PR from \`${headBranch}\` to \`main\`.`;
              const pr = await github.rest.pulls.create({
                owner, repo,
                title,
                head: headBranch,
                base: 'main',
                body
              });
              core.info(`PR criado: #${pr.data.number}`);
            }

  # 2) Roda a matriz de testes (no push das feature/** e nos PRs para main)
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12']   # ajuste conforme suporte
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest

      - name: Run tests (pytest)
        run: |
          if [ -d tests ]; then
            pytest -q src/tests
          else
            echo "No tests/ directory found"; exit 1
          fi
